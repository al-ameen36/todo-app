$bright-blue: hsl(220, 98%, 61%);
$check-background: linear-gradient(
  145deg,
  hsl(192, 100%, 67%),
  hsl(280, 87%, 65%)
);

// Light Theme
$light-theme: (
  "very-light-gray": hsl(0, 0%, 98%),
  "very-light-grayish-blue": hsl(236, 33%, 92%),
  "light-grayish-blue": hsl(233, 11%, 84%),
  "dark-grayish-blue": hsl(236, 9%, 61%),
  "very-dark-grayish-blue": hsl(235, 19%, 35%),
);

// Dark Theme
$dark-theme: (
  "very-dark-blue": hsl(235, 21%, 11%),
  "very-dark-desaturated-blue": hsl(235, 24%, 19%),
  "light-grayish-blue": hsl(234, 39%, 85%),
  "light-grayish-blue-hover": hsl(236, 33%, 92%),
  "dark-grayish-blue": hsl(234, 11%, 52%),
  "very-dark-grayish-blue-1": hsl(233, 14%, 35%),
  "very-dark-grayish-blue-2": hsl(237, 14%, 26%),
);

// GLOBAL STYLES
body {
  font: clamp(13px, 3vw, 18px) "Josefin Sans", sans-serif;
  height: 100vh;
  line-height: 1;
}

button {
  background-color: transparent;
  border: none;
  color: inherit;
  cursor: pointer;
  transition: 200ms;
}

input[type="text"] {
  border: none;
  color: inherit;
  padding-block-start: 5px;
  outline: none;
  width: 90%;
}

img {
  max-height: 1.25rem;
}

h1 {
  font-size: 1.75rem;
  font-weight: 700;
  letter-spacing: 10px;
}

label {
  // fixed alignment issue in .todo_item with padding
  padding-block-start: 4px;

  // fixed label getting too long
  flex-shrink: 0;
  max-width: 37ch;
  word-break: break-word;
}

/* OTHER STYLING */
.visually_hidden {
  clip: rect(0 0 0 0);
  clip-path: inset(50%);
  height: 1px;
  overflow: hidden;
  position: absolute;
  white-space: nowrap;
  width: 1px;
}
#root {
  height: 100%;
  transition: 200ms;
}

.header_inner,
main,
footer {
  max-width: 590px;
  margin-inline: auto;
  position: relative;
}

.header_inner,
main,
footer {
  padding-inline: 1.5rem;
}

header {
  background-position: right top;
  background-repeat: no-repeat;
  background-size: cover;
  padding-block: 2.8rem;
}

.app_title {
  color: map-get($light-theme, "very-light-gray");
  display: flex;
  justify-content: space-between;
}

main {
  margin-block-start: -2rem;
  position: relative;
}
.todo {
  &_item.active {
    outline: 1px solid hsl(280, 87%, 65%);
  }

  &_inputs,
  &_item,
  &_summary,
  &_filters {
    padding-block: clamp(1rem, 3vw, 1.2rem);
    padding-inline: 1.3rem;
    transition: 200ms background-color;
  }

  &_list.empty p {
    align-items: center;
    border-radius: 0.3rem 0.3rem 0 0;
    display: flex;
    height: 61.38px;
    justify-content: center;
    transition: 200ms;
  }

  &_inputs {
    border-radius: 0.3rem;
    display: flex;
    align-items: center;
    margin-block-start: 2rem;
  }
  &_item {
    align-items: center;
    display: flex;
    cursor: move;

    &:first-child {
      border-radius: 0.3rem 0.3rem 0 0;
    }
    &:hover .delete_btn img {
      opacity: 1;
    }
  }

  &_text {
    cursor: pointer;
    display: inline-block;
    margin-right: auto;
  }
}

#todoItem-input {
  transition: 200ms;
}

input[type="checkbox"] {
  visibility: hidden;
  position: absolute;

  & ~ .input_label {
    border-radius: 50%;
    cursor: pointer;
    display: inline-block;
    height: 22px;
    margin-inline-end: clamp(0.75rem, 4vw, 1.5rem);
    width: 22px;
    //
    position: relative;
  }

  & ~ .input_label:hover::after,
  &:checked ~ .input_label::after {
    background: $check-background;
  }
  & ~ .input_label::after {
    content: "";
    border-radius: inherit;
    height: 100%;
    left: 0;
    position: absolute;
    top: 0;
    width: 100%;

    // border color hack
    background: map-get($light-theme, "light-grayish-blue");
    padding: 2px;
    -webkit-mask: linear-gradient(#fff 0 0) content-box,
      linear-gradient(#fff 0 0);
    mask: linear-gradient(#fff 0 0) content-box, linear-gradient(#fff 0 0);
    -webkit-mask-composite: xor;
    mask-composite: exclude;
  }

  &:checked ~ .input_label {
    background-image: url(../images/icon-check.svg), $check-background;
    background-repeat: no-repeat;
    background-position: center;
  }

  &:checked ~ .todo_text {
    text-decoration: line-through;
  }
}

.delete_btn img {
  max-height: 0.75rem;
  opacity: 0;
  transition: 200ms;
}

.todo_summary,
.todo_summary h2,
.todo_filters {
  font-size: clamp(13px, 3vw, 14px);
}
.todo_summary {
  border-radius: 0 0 0.3rem 0.3rem;
  display: flex;
  justify-content: space-between;
  & h2 {
    font-weight: normal;
  }
}

.todo_filters {
  border-radius: 0.3rem;
  display: flex;
  font-weight: 700;
  gap: clamp(0.75rem, 3vw, 1rem);
  justify-content: center;
  margin-block-start: 1rem;
}

footer {
  margin-block-start: 3rem;
  text-align: center;
}

.light_theme {
  background-color: map-get($light-theme, "very-light-gray");
  color: map-get($light-theme, "very-dark-grayish-blue");

  .app_title {
    color: map-get($light-theme, "very-light-gray");
  }

  header {
    background-image: url(../images/bg-mobile-light.jpg);
  }

  input[type="checkbox"] {
    &:checked ~ .todo_text {
      color: map-get($light-theme, "dark-grayish-blue");
    }
  }

  .todo {
    &_list,
    &_summary,
    &_filters,
    &_inputs {
      box-shadow: 0 7px 10px rgb(120 120 120 / 0.3);
    }

    &_inputs,
    &_item,
    &_summary,
    &_filters,
    &_list.empty p {
      background-color: #fff;
    }

    &_inputs {
      background-color: #fff;

      & input::placeholder {
        color: map-get($light-theme, "very-dark-grayish-blue");
      }
    }

    &_item {
      border-bottom: 1px solid map-get($light-theme, "light-grayish-blue");
    }

    &_summary {
      color: map-get($light-theme, "dark-grayish-blue");
      & button:hover {
        color: map-get($light-theme, "very-dark-grayish-blue");
      }
    }

    &_filters {
      & .active {
        color: $bright-blue;
      }
      & button {
        color: map-get($light-theme, "dark-grayish-blue");
      }
      & button:hover {
        color: map-get($light-theme, "very-dark-grayish-blue");
      }
    }
  }
}

.dark_theme {
  background-color: map-get($dark-theme, "very-dark-blue");
  color: map-get($dark-theme, "light-grayish-blue");

  header {
    background-image: url(../images/bg-mobile-dark.jpg);
  }

  #todoItem-input {
    background-color: map-get($dark-theme, "very-dark-desaturated-blue");
  }
  .todo {
    &_list,
    &_summary,
    &_filters,
    &_inputs {
      box-shadow: 0 10px 20px rgba(0, 0, 0, 0.3);
    }

    &_inputs,
    &_item,
    &_summary,
    &_filters,
    &_list.empty p {
      background-color: map-get($dark-theme, "very-dark-desaturated-blue");
    }

    &_inputs {
      & input::placeholder {
        color: map-get($dark-theme, "light-grayish-blue");
      }
    }

    &_item {
      border-bottom: 1px solid map-get($dark-theme, "very-dark-grayish-blue-1");
    }

    &_summary {
      color: map-get($dark-theme, "dark-grayish-blue");

      & button:hover {
        color: map-get($dark-theme, "light-grayish-blue");
      }
    }

    &_filters {
      & .active {
        color: $bright-blue;
      }
      & button {
        color: map-get($dark-theme, "dark-grayish-blue");
        &:hover {
          color: map-get($dark-theme, "light-grayish-blue");
        }
      }
    }
  }
}

@media screen and (min-width: 590px) {
  .dark_theme .todo_filters,
  .light_theme .todo_filters {
    box-shadow: none;
    left: 50%;
    margin-block-start: -36px;
    padding: 0;
    position: absolute;
    transform: translateX(-50%);
  }
}
